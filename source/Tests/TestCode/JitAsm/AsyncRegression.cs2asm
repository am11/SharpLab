// https://github.com/ashmind/SharpLab/issues/39#issuecomment-298152571
using System;
using System.Threading.Tasks;
using System.Runtime.CompilerServices;

static class C {
    static int M(int x) {
        return Foo(x + 0x12345).Result;
    }

    static async Task<int> Foo(int x) {
        return x;
    }
}

#=>

; Core CLR v<IGNORE> on amd64

C.M(Int32)
    L0000: sub rsp, 0x28
    L0004: add ecx, 0x12345
    L000a: call C.Foo(Int32)
    L000f: mov rcx, rax
    L0012: cmp [rcx], ecx
    L0014: add rsp, 0x28
    L0018: jmp System.Threading.Tasks.Task`1[[System.Int32, System.Private.CoreLib]].get_Result()

C.Foo(Int32)
    L0000: sub rsp, 0x38
    L0004: xor eax, eax
    L0006: mov [rsp+0x28], rax
    L000b: mov [rsp+0x30], rax
    L0010: xor eax, eax
    L0012: mov [rsp+0x30], rax
    L0017: mov [rsp+0x2c], ecx
    L001b: mov dword ptr [rsp+0x28], 0x<IGNORE>
    L0023: lea rcx, [rsp+0x28]
    L0028: call System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[C+<Foo>d__1, _]](<Foo>d__1 ByRef)
    L002d: mov rax, [rsp+0x30]
    L0032: test rax, rax
    L0035: jne short L0041
    L0037: lea rcx, [rsp+0x30]
    L003c: call System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Int32, System.Private.CoreLib]].InitializeTaskAsPromise()
    L0041: nop
    L0042: add rsp, 0x38
    L0046: ret

C+<Foo>d__1.MoveNext()
    L0000: push rbp
    L0001: push rdi
    L0002: push rsi
    L0003: sub rsp, 0x30
    L0007: lea rbp, [rsp+0x40]
    L000c: mov [rbp-0x20], rsp
    L0010: mov [rbp+0x10], rcx
    L0014: mov rcx, [rbp+0x10]
    L0018: mov esi, [rcx+4]
    L001b: mov rcx, [rbp+0x10]
    L001f: mov dword ptr [rcx], 0x<IGNORE>
    L0025: mov rdi, [rbp+0x10]
    L0029: add rdi, 8
    L002d: mov rcx, [rdi]
    L0030: test rcx, rcx
    L0033: jne short L0085
    L0035: mov ecx, esi
    L0037: cmp ecx, 9
    L003a: jge short L005f
    L003c: cmp esi, 0x<IGNORE>
    L003f: jl short L005f
    L0041: mov rax, 0x<IGNORE>
    L004b: mov rax, [rax]
    L004e: inc ecx
    L0050: cmp ecx, [rax+8]
    L0053: jae short L0095
    L0055: movsxd rcx, ecx
    L0058: mov rdx, [rax+rcx*8+0x10]
    L005d: jmp short L007b
    L005f: mov rcx, 0x<IGNORE>
    L0069: call 0x<IGNORE>
    L006e: mov rdx, rax
    L0071: mov dword ptr [rdx+0x34], 0x<IGNORE>
    L0078: mov [rdx+0x38], esi
    L007b: mov rcx, rdi
    L007e: call 0x<IGNORE>
    L0083: jmp short L008c
    L0085: mov edx, esi
    L0087: call System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Int32, System.Private.CoreLib]].SetExistingTaskResult(System.Threading.Tasks.Task`1<Int32>, Int32)
    L008c: nop
    L008d: lea rsp, [rbp-0x10]
    L0091: pop rsi
    L0092: pop rdi
    L0093: pop rbp
    L0094: ret
    L0095: call 0x<IGNORE>
    L009a: int3
    L009b: push rbp
    L009c: push rdi
    L009d: push rsi
    L009e: sub rsp, 0x30
    L00a2: mov rbp, [rcx+0x20]
    L00a6: mov [rsp+0x20], rbp
    L00ab: lea rbp, [rbp+0x40]
    L00af: mov rcx, [rbp+0x10]
    L00b3: mov dword ptr [rcx], 0x<IGNORE>
    L00b9: mov rcx, [rbp+0x10]
    L00bd: add rcx, 8
    L00c1: call System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Int32, System.Private.CoreLib]].SetException(System.Exception)
    L00c6: lea rax, [L008c]
    L00cd: add rsp, 0x30
    L00d1: pop rsi
    L00d2: pop rdi
    L00d3: pop rbp
    L00d4: ret

C+<Foo>d__1.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
    L0000: sub rsp, 0x28
    L0004: add rcx, 8
    L0008: mov rcx, [rcx]
    L000b: test rdx, rdx
    L000e: je short L001a
    L0010: test rcx, rcx
    L0013: jne short L0025
    L0015: add rsp, 0x28
    L0019: ret
    L001a: mov ecx, 0x3c
    L001f: call System.ThrowHelper.ThrowArgumentNullException(System.ExceptionArgument)
    L0024: int3
    L0025: mov ecx, 0x25
    L002a: call System.ThrowHelper.ThrowInvalidOperationException(System.ExceptionResource)
    L002f: int3